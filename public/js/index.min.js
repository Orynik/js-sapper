const startButton={startButton:document.querySelector(".start-button"),fearClass:"start-button--tile-focus",loseClass:"start-button--lose",winClass:"start-button--win",init(){this.startButton.addEventListener("click",()=>{startGame()})},toggleFear(t=!0){t?this.startButton.classList.add(this.fearClass):this.startButton.classList.remove(this.fearClass)},toggleLose(t=!0){t?this.startButton.classList.add(this.loseClass):this.startButton.classList.remove(this.loseClass)},toggleWin(t=!0){t?this.startButton.classList.add(this.winClass):this.startButton.classList.remove(this.winClass)}},bombCounter={bombEl:document.querySelector(".bomb-indicate"),arrayCountersElems:[],constBombQty:40,bombQty:40,resetQty(){this.bombQty=40},renderBombQty(){this.bombEl.querySelectorAll(".numeric").forEach(t=>{t.remove()});let t=document.createElement("div"),e=document.createElement("div"),i=document.createElement("div");this.arrayCountersElems=[t,e,i],renderNumericFields(this.bombQty,this.arrayCountersElems),this.bombEl.appendChild(t),this.bombEl.appendChild(e),this.bombEl.appendChild(i)},decrementBomb(){this.bombQty&&(this.bombQty--,this.renderBombQty())},incrementBomb(){this.bombQty++,this.renderBombQty()}},stopwatch={el:document.querySelector(".stopwatch"),inst:null,currentValue:2400,init(){this.el.querySelectorAll(".numeric").forEach(t=>{t.remove()});let t=document.createElement("div"),e=document.createElement("div"),i=document.createElement("div"),s=document.createElement("div");this.arrayCountersElems=[t,e,i,s],renderNumericFields(this.currentValue,this.arrayCountersElems),this.el.appendChild(t),this.el.appendChild(e),this.el.appendChild(i),this.el.appendChild(s)},start(){this.init(),this.inst=setInterval(()=>{this.currentValue||(isEndGame=!0,this.stop()),this.init(),this.currentValue--},1e3)},clear(){this.stop(),this.currentValue=2400},stop(){clearInterval(this.inst)}};function renderNumericFields(t,e){let i=String(t),s=0;e.forEach((t,l)=>{if(e.length-l<=i.length){let e=tileMap.get(+i[s]);return t.classList.add("numeric",`numeric${e}`),void s++}t.classList.add("numeric","numeric--zero")})}let tileMap=new Map;tileMap.set(0,"--zero"),tileMap.set(1,"--one"),tileMap.set(2,"--two"),tileMap.set(3,"--three"),tileMap.set(4,"--four"),tileMap.set(5,"--five"),tileMap.set(6,"--six"),tileMap.set(7,"--seven"),tileMap.set(8,"--eight"),tileMap.set(9,"--nine");let tilesState=new Map;const tileWidth=17;let tiles,boardSize=256,boardSideLength=Math.sqrt(boardSize),isInitialClick=!0,board=document.getElementById("board"),isEndGame=!1,isWinGame=!1;function renderTile(){board.parentElement.style.width=`${boardSideLength*tileWidth}px`;for(let t=0;t<boardSize;t++)createTile(t);bombCounter.renderBombQty(),stopwatch.init(),tiles=document.querySelectorAll(".tile")}function setup(t=null){let e=bombCounter.bombQty,i={},s={},l=0,a=0;tiles.forEach(n=>{function o(t){Object.hasOwn(i,t)?i[t]++:i[t]=1}n.setAttribute("data-tile",`${l},${a}`);let r=Math.random()<.25;n!==t&&r&&e&&(e--,s[`${l},${a}`]=!0,l>0&&o(`${l-1},${a}`),l<boardSideLength-1&&o(`${l+1},${a}`),a>0&&o(`${l},${a-1}`),a<boardSideLength-1&&o(`${l},${a+1}`),l>0&&a>0&&o(`${l-1},${a-1}`),l<boardSideLength-1&&a<boardSideLength-1&&o(`${l+1},${a+1}`),a>0&&l<boardSideLength-1&&o(`${l+1},${a-1}`),l>0&&a<boardSideLength-1&&o(`${l-1},${a+1}`)),++l>=boardSideLength&&(l=0,a++)}),tiles.forEach(t=>{let e=t.dataset.tile,l={};Object.hasOwn(s,e)?l.hasBomb=s[e]:Object.hasOwn(i,e)?l.count=i[e]:l=null,null!==l&&tilesState.set(e,l)}),stopwatch.start()}function clickTile(t){if(t.classList.contains("tile--checked")||t.classList.contains("tile--flagged")||t.classList.contains("tile-question"))return;let e=t.getAttribute("data-tile");if(tilesState.has(e)){if(tilesState.get(e).hasBomb)endGame(t);else if(tilesState.get(e).count){let i=tilesState.get(e).count;t.classList.add("tile--checked"),t.classList.add(`tile${tileMap.get(i)}`),setTimeout(()=>{checkVictory()},100)}}else checkTile(e),t.classList.add("tile--checked")}function checkTile(t){let e=t.split(","),i=parseInt(e[0]),s=parseInt(e[1]);setTimeout(()=>{if(i>0){clickTile(document.querySelectorAll(`[data-tile="${i-1},${s}"`)[0],!1)}if(i<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i+1},${s}"`)[0],!1)}if(s>0){clickTile(document.querySelectorAll(`[data-tile="${i},${s-1}"]`)[0],!1)}if(s<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i},${s+1}"]`)[0],!1)}if(i>0&&s>0){clickTile(document.querySelectorAll(`[data-tile="${i-1},${s-1}"`)[0],!1)}if(i<boardSideLength-1&&s<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i+1},${s+1}"`)[0],!1)}if(s>0&&i<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i+1},${s-1}"]`)[0],!1)}if(i>0&&s<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i-1},${s+1}"`)[0],!1)}},10)}function createTile(){function t(){return new Promise(t=>{isEndGame||isWinGame||t()})}let e=document.createElement("div");e.classList.add("tile"),e.addEventListener("mousedown",i=>{t().then(()=>{e.classList.contains("tile-question")||e.classList.contains("tile--flagged")||2===i.button||(e.classList.add("tile--focus"),startButton.toggleFear())})}),e.addEventListener("mouseout",()=>{t().then(()=>{e.classList.contains("tile-question")||e.classList.contains("tile--flagged")||(e.classList.remove("tile--focus"),startButton.toggleFear(!1))})}),e.addEventListener("click",function(i){t().then(()=>{e.classList.contains("tile-question")||e.classList.contains("tile--flagged")||(isInitialClick&&(setup(i.target),isInitialClick=!1),clickTile(e))})}),e.addEventListener("contextmenu",function(e){e.preventDefault(),t().then(()=>{if(!e.target.classList.contains("tile--checked"))if(e.target.classList.contains("tile--flagged"))bombCounter.incrementBomb(),e.target.classList.remove("tile--flagged"),e.target.classList.add("tile-question");else if(e.target.classList.contains("tile-question"))e.target.classList.remove("tile-question"),e.target.classList.remove("tile-question--focus"),e.target.classList.remove("tile--flagged");else{if(!bombCounter.bombQty)return;bombCounter.decrementBomb(),e.target.classList.add("tile--flagged")}e.target.classList.remove("tile--focus")})}),board.appendChild(e)}function endGame(t){isEndGame=!0,t.classList.add("tile-bomb--focus"),tilesState.forEach((t,e)=>{Object.hasOwn(t,"hasBomb")&&document.querySelector(`.tile[data-tile="${e}"]`).classList.add("tile-bomb")}),startButton.toggleLose(),stopwatch.stop()}function checkVictory(){document.querySelectorAll(".tile--checked").length===boardSize-1&&(startButton.toggleWin(),isWinGame=!0,stopwatch.stop())}function startGame(){isEndGame=!1,isWinGame=!1,isInitialClick=!0,bombCounter.resetQty(),startButton.toggleLose(!1),startButton.toggleWin(!1),stopwatch.clear(),tilesState.clear(),tiles.forEach(t=>{t.remove()}),renderTile()}startButton.init(),renderTile();