let tileMap=new Map;tileMap.set(1,"--one"),tileMap.set(2,"--two"),tileMap.set(3,"--three"),tileMap.set(4,"--four"),tileMap.set(5,"--five"),tileMap.set(6,"--six"),tileMap.set(7,"--seven"),tileMap.set(8,"--eight");let tilesState=new Map;const tileWidth=17,bombQty=40;let boardSize=256,boardSideLength=Math.sqrt(boardSize),isInitialClick=!0,board=document.getElementById("board"),isEndGame=!1;function renderTile(){board.style.width=`${boardSideLength*tileWidth}px`;for(let e=0;e<boardSize;e++)createTile(e)}function setup(e){let t=bombQty,i={},l={},a=0,d=0;document.querySelectorAll(".tile").forEach(c=>{function n(e){Object.hasOwn(i,e)?i[e]++:i[e]=1}c.setAttribute("data-tile",`${a},${d}`);let s=Math.random()<.25;c!==e&&s&&t&&(t--,l[`${a},${d}`]=!0,a>0&&n(`${a-1},${d}`),a<boardSize-1&&n(`${a+1},${d}`),d>0&&n(`${a},${d-1}`),d<boardSideLength-1&&n(`${a},${d+1}`),a>0&&d>0&&n(`${a-1},${d-1}`),a<boardSideLength-1&&d<boardSideLength-1&&n(`${a+1},${d+1}`),d>0&&a<boardSideLength-1&&n(`${a+1},${d-1}`),a>0&&d<boardSideLength-1&&n(`${a-1},${d+1}`)),++a>=16&&(a=0,d++)}),Object.entries(i).forEach(([e,t])=>{tilesState.set(e,{count:t,...Object.hasOwn(l,e)&&{hasBomb:!0}})})}function clickTile(e){if(e.classList.contains("tile--checked")||e.classList.contains("tile--flagged"))return;let t=e.getAttribute("data-tile");if(tilesState.has(t))if(tilesState.get(t).hasBomb)endGame(e);else{let i=tilesState.get(t).count;e.classList.add("tile--checked"),e.classList.add(`tile${tileMap.get(+i)}`),setTimeout(()=>{},100)}else checkTile(t),e.classList.add("tile--checked")}function checkTile(e){let t=e.split(","),i=parseInt(t[0]),l=parseInt(t[1]);setTimeout(()=>{if(i>0){clickTile(document.querySelectorAll(`[data-tile="${i-1},${l}"`)[0],`${i-1},${l}`)}if(i<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i+1},${l}"`)[0],`${i+1},${l}`)}if(l>0){clickTile(document.querySelectorAll(`[data-tile="${i},${l-1}"]`)[0],`${i},${l-1}`)}if(l<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i},${l+1}"]`)[0],`${i},${l+1}`)}if(i>0&&l>0){clickTile(document.querySelectorAll(`[data-tile="${i-1},${l-1}"`)[0],`${i-1},${l-1}`)}if(i<15&&l<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i+1},${l+1}"`)[0],`${i+1},${l+1}`)}if(l>0&&i<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i+1},${l-1}"]`)[0],`${i+1},${l-1}`)}if(i>0&&l<boardSideLength-1){clickTile(document.querySelectorAll(`[data-tile="${i-1},${l+1}"`)[0],`${i-1},${l+1}`)}},10)}function createTile(e){function t(){return new Promise(e=>{isEndGame||e()})}let i=document.createElement("div");i.classList.add("tile"),i.addEventListener("mousedown",()=>{t().then(()=>{i.classList.add("tile--focus")})}),i.addEventListener("mouseout",()=>{t().then(()=>{i.classList.remove("tile--focus")})}),i.addEventListener("click",function(e){t().then(()=>{isInitialClick&&(setup(e.target),isInitialClick=!1),clickTile(i)})}),board.appendChild(i)}function endGame(e){isEndGame=!0,e.classList.add("tile-bomb--focus"),tilesState.forEach((e,t)=>{Object.hasOwn(e,"hasBomb")&&document.querySelector(`.tile[data-tile="${t}"]`).classList.add("tile-bomb")})}renderTile();